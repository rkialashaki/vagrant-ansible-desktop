- name: base.users | user-vagrant.yml | Add vagrant user to docker group  
  user: name=vagrant
        groups=docker
        append=yes
  tags: ["install", "user-vagrant"]

- name: base.user | user-vagrant.yml | Create development directories
  file:
    path: /home/vagrant/working/{{ item.directory }}
    state: directory
    owner: vagrant
    group: vagrant
    mode: 0755
  with_items:
    - { directory: "go/src" }
    - { directory: "go/bin" }
    - { directory: "go/pkg" }
    - { directory: "python/envs" }
  tags: ["install", "user-vagrant"]

- name: base.users | user-vagrant.yml | Git clone .vim
  git:
    repo: https://github.com/rkialashaki/.vim.git
    dest: /home/vagrant/.vim
    update: no
  become: yes
  become_user: vagrant
  #ignore_errors: yes
  tags: ["install", "user-vagrant"]

- name: base.users | user-vagrant.yml | Symlink .vimrc
  file:
    src: /home/vagrant/.vim/.vimrc
    dest: /home/vagrant/.vimrc
    owner: vagrant
    group: vagrant
    state: link
  tags: ["install", "user-vagrant"]

- name: base.users | user-vagrant.yml | Setup vim env via script
  shell: ./vim-env-setup.sh >> /home/vagrant/.vim/vim-env-setup.log
  args:
    chdir: /home/vagrant/.vim
    creates: /home/vagrant/.vim/vim-env-setup.log
  become: yes
  become_user: vagrant
  tags: ["install", "user-vagrant"]

#- name: base.users | user-vagrant.yml | Install pyenv
#  shell: curl https://pyenv.run | bash
#  args:
#    chdir: /home/vagrant
#  become: yes
#  become_user: vagrant
#  tags: ["install", "user-vagrant", "python"]

- name: base.users | user-vagrant.yml | Set up bashrc.d
  copy: src={{bashrc_item}} dest=/home/vagrant/.{{bashrc_item|basename}} owner=vagrant group=vagrant
  with_fileglob: "{{ role_path }}/templates/user_vagrant/bashrc/*"
  loop_control:
    loop_var: bashrc_item
  tags: ["install", "user-vagrant"]
